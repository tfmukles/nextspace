---
import Button from "@/components/Button.astro";
import { markdownify } from "@/lib/utils/textConverter";
import Accordion from "@/shortcodes/Accordion";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const faqs = (await getEntry("faqs", "-index")) as CollectionEntry<"faqs">;

const { list } = faqs.data;

type Props = {
  isNoSectionBottom?: boolean;
  isNoSectionTop?: boolean;
};

const { isNoSectionBottom = false, isNoSectionTop = false } = Astro.props;
---

{
  list.length > 0 && (
    <section
      class={`section ${isNoSectionBottom && "pb-0"} ${isNoSectionTop && "pt-0"}`}
    >
      <div class="container">
        <div class="flex flex-col lg:flex-row items-center lg:items-start lg:justify-between">
          {/* section title   */}
          <div
            class={`lg:w-[25%] max-lg:text-center ${Astro.url.pathname.includes("faqs") && "hidden"}`}
          >
            <p
              data-aos="fade-up-sm"
              data-aos-delay="150"
              class="font-medium text-primary uppercase"
              set:html={markdownify("FAQS")}
            />
            <h2
              data-aos="fade-up-sm"
              data-aos-delay="200"
              class="mt-3 font-medium text-primary pb-14"
              set:html={markdownify("Still Have A Question?")}
            />

            <div data-aos="fade-up-sm" data-aos-delay="300">
              <Button enable label="See All FAQs" link="/faqs" />
            </div>
          </div>

          {/* FAQ section  */}
          <div class="max-lg:pt-10 lg:w-[70%] mx-auto">
            {list?.map((item, index) => (
              <div
                data-aos="fade-left-sm"
                data-aos-delay={index * 100 + 150}
                class="mb-1"
              >
                <Accordion client:load title={item.question} id={index}>
                  <div set:html={markdownify(item.answer)} />
                </Accordion>
              </div>
            ))}
          </div>
        </div>
      </div>
    </section>
  )
}

<script is:inline>
  document.addEventListener("astro:page-load", () => {
    const accordions = document.querySelectorAll("[data-accordion-id]");

    accordions.forEach((el, index) => {
      const btn = el.querySelector("button");
      btn.addEventListener("click", () => {
        accordions.forEach((otherEl) => {
          const otherId = Number(otherEl.getAttribute("data-accordion-id"));
          if (otherId !== index) {
            window.dispatchEvent(new CustomEvent(`accordion:close-${otherId}`));
          }
        });
      });
    });
  });
</script>
