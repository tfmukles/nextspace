---
import Button from "@/components/Button.astro";
import ImageMod from "@/components/ImageMod.astro";
import Logo from "@/components/Logo.astro";
import config from "@/config/config.json";
import menu from "@/config/menu.json";

export interface ChildNavigationLink {
  name?: string;
  url?: string;
  image?: string;
  children?: ChildNavigationLink[];
}

export interface NavigationLink {
  name?: string;
  url?: string;
  enable?: boolean;
  hasMegamenu?: boolean;
  image?: string;
  hasChildren?: boolean;
  children?: ChildNavigationLink[];
}

const { main }: { [key: string]: NavigationLink[] } = menu;
const { navigation_button } = config;
const { pathname } = Astro.url;
---

<header class={`header fixed top-0 z-50 w-full`}>
  <nav class="navbar container relative z-10">
    <!-- logo -->
    <div class="order-0 lg:order-2">
      <Logo />
    </div>
    <!-- navbar toggler -->
    <input id="nav-toggle" type="checkbox" class="hidden" />
    <label
      for="nav-toggle"
      class="order-3 flex cursor-pointer items-center text-text lg:order-1 lg:hidden"
    >
      <svg id="show-button" class="block h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Open</title>
        <path d="M0 3h20v2H0V3z m0 6h20v2H0V9z m0 6h20v2H0V0z"></path>
      </svg>
      <svg id="hide-button" class="hidden h-6 fill-current" viewBox="0 0 20 20">
        <title>Menu Close</title>
        <polygon
          points="11 9 22 9 22 11 11 11 11 22 9 22 9 11 -2 11 -2 9 9 9 9 -2 11 -2"
          transform="rotate(45 10 10)"
        >
        </polygon>
      </svg>
    </label>
    <!-- /navbar toggler -->
    <ul
      id="nav-menu"
      class="navbar-nav order-3 hidden pb-6 lg:order-1 lg:flex lg:w-auto lg:pb-0"
    >
      {
        main.map((menu) => (
          <>
            {menu.hasMegamenu !== undefined && menu.name ? (
              <li class="nav-item nav-dropdown group">
                <span
                  class={`nav-link inline-flex items-center ${
                    menu.children
                      ?.map((subchild) =>
                        subchild.children?.some(
                          (child) =>
                            pathname === child.url ||
                            pathname === `${child.url}/`
                        )
                      )
                      .includes(true)
                      ? "active"
                      : ""
                  }`}
                >
                  {menu.name}
                  <span class="arrow-icon">
                    <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                      <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                    </svg>
                  </span>
                </span>
                <div
                  class={`mega-menu-wrapper max-lg:hidden max-lg:group-[.active]:flex max-lg:group-[.active]:flex-col lg:invisible lg:absolute lg:left-0 lg:flex ${menu.hasMegamenu ? "lg:items-center" : "lg:flex-col"} lg:opacity-0 lg:transition-all lg:duration-300 lg:group-hover:visible lg:group-hover:opacity-100 ${!menu.hasMegamenu ? " lg:p-4 lg:rounded-xl lg:border lg:border-border" : ""}`}
                >
                  {menu.image && menu.hasMegamenu && (
                    <div class="flex-shrink-0 mr-4">
                      <ImageMod
                        src={menu.image}
                        alt={"Preview"}
                        class="aspect-square shadow max-lg:hidden"
                        width={240}
                        height={240}
                      />
                    </div>
                  )}
                  {menu.children?.map((subchild, index) => (
                    <div
                      class={`flex flex-col gap-5 ${!menu.hasMegamenu ? "w-full" : ""}`}
                    >
                      <ul
                        class={`nav-dropdown-list ${
                          menu.hasMegamenu
                            ? "gap-x-8 sm:columns-2 md:columns-3 lg:grid lg:grid-cols-[repeat(3,_1fr)]"
                            : "flex w-full h-full flex-col gap-2 lg:max-h-[400px] overflow-y-auto pr-2"
                        }`}
                      >
                        {subchild.children?.map((child) => (
                          <li class="nav-dropdown-item">
                            <a
                              href={child.url}
                              aria-label={child.name || "preview"}
                              class={`nav-dropdown-link block ${
                                !menu.hasMegamenu
                                  ? "py-2 px-3 hover:bg-secondary/5 rounded-lg whitespace-nowrap"
                                  : ""
                              } ${
                                pathname === `${child.url}/` ||
                                pathname === child.url
                                  ? "active"
                                  : ""
                              }`}
                            >
                              {child.name}
                            </a>
                          </li>
                        ))}
                      </ul>
                    </div>
                  ))}
                </div>
              </li>
            ) : menu.hasChildren && menu.name ? (
              <li class="nav-item nav-dropdown group relative">
                <span
                  class={`nav-link inline-flex items-center ${
                    menu.children?.map(({ url }) => url).includes(pathname) ||
                    menu.children
                      ?.map(({ url }) => `${url}/`)
                      .includes(pathname)
                      ? "active"
                      : ""
                  }`}
                >
                  {menu.name}
                  <span class="arrow-icon">
                    <svg class="h-4 w-4 fill-current" viewBox="0 0 20 20">
                      <path d="M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z" />
                    </svg>
                  </span>
                </span>
                <ul
                  class={`nav-dropdown-list flex flex-col gap-1 rounded-xl border border-border bg-primary p-3 max-lg:mb-3 max-lg:hidden max-lg:w-[300px] max-lg:group-[.active]:flex max-lg:group-[.active]:flex-col lg:invisible lg:absolute lg:left-0 lg:flex lg:opacity-0 lg:transition-all lg:duration-300 lg:group-hover:visible lg:group-hover:opacity-100`}
                >
                  {menu.children?.map((child) => (
                    <li class={`nav-dropdown-item`}>
                      <a
                        href={child.url}
                        aria-label={child.name}
                        class={`nav-dropdown-link rounded-xl !px-4 !py-1.5 hover:bg-secondary/5 ${
                          ((pathname === `${child.url}/` ||
                            pathname === child.url) &&
                            "active") ||
                          ""
                        }`}
                      >
                        {child.name}
                      </a>
                    </li>
                  ))}
                </ul>
              </li>
            ) : (
              menu.name && (
                <li class="nav-item">
                  <a
                    href={menu.url}
                    class={`nav-link block ${
                      (pathname === `${menu.url}/` || pathname === menu.url) &&
                      "active"
                    }`}
                  >
                    {menu.name}
                  </a>
                </li>
              )
            )}
          </>
        ))
      }
      {
        navigation_button.enable && (
          <li class="mt-4 inline-block lg:hidden">
            <a class="btn btn-primary btn-sm" href={navigation_button.link}>
              {navigation_button.label}
            </a>
          </li>
        )
      }
    </ul>

    <div class="order-1 ml-auto flex items-center md:order-2 lg:ml-0">
      <div class="hidden lg:flex items-center">
        <Button
          enable={navigation_button.enable}
          link={navigation_button.link}
          label={navigation_button.label}
          showIcon={false}
        />
      </div>
    </div>
  </nav>
</header>
